import * as React from 'react';

import { StyleSheet, View, Text,NativeModules } from 'react-native';
import { multiply,saveImageMetaInformation,getMetaData } from 'react-native-exif-metadata';

console.log("NativeModules", NativeModules?.Module);


export default function App() {
  const [result, setResult] = React.useState<number | undefined>();

  React.useEffect(() => {
    //multiply(3, 7).then(setResult);
    editImage()
  }, []);

  const path = ""

  const editImage = () => {
    saveImageMetaInformation({
      base64String:path,
      latitude: 12.1111,
      longitude: 87.2222,
      dateTime: String(new Date()),
      onSuccess: (image) => {
        getMetaData({
          imagePath: image,
          onSuccess: (data) => {
            console.log("data", data);
          }
        })
        console.log("image", image);
      }
    })
  }

  return (
    <View style={styles.container}>
      <Text>Result: {result}</Text>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  box: {
    width: 60,
    height: 60,
    marginVertical: 20,
  },
});
